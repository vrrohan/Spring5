<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<bean id="empBean" class="Employee" autowire="byName" lazy-init="true">
		<property name="empName" value="Elon Musk"></property>
		<property name="desig" value="Software Developer"></property>
		<property name="salary" value="65000"></property>
	</bean>

	<bean id="compDetails" class="Company">
		<property name="compName" value="Google Inc."></property>
		<property name="compLocation" value="USA"></property>
		<property name="compInfo" value="Search Engine"></property>
	</bean>

	<bean id="empAddress" class="Address">
		<property name="streetName" value="sector 23"></property>
		<property name="city" value="Noida"></property>
		<property name="state" value="UP"></property>
		<property name="zipcode" value="201301"></property>
	</bean>
	
	<bean class="DisplayBeanPostProcessor"></bean>

	<!-- <bean id="rad2" class="Radius"> <property name="radii" value="8"></property> 
		</bean> Exception Error - Unsatisfied dependency expressed through bean property 
		'rA'; nested exception is org.springframework.beans.factory.NoUniqueBeanDefinitionException: 
		No qualifying bean of type 'Radius' available: expected single matching bean 
		but found 2: rad,rad2 In case of byType autowiring mode, bean id and reference 
		name may be different. But there must be only one bean of a type. It internally 
		uses setter injection. <bean id="b1" class="org.sssit.B"></bean> <bean id="a" 
		class="org.sssit.A" autowire="byType"></bean> In this case, it works fine 
		because you have created an instance of B type. It doesn't matter that you 
		have different bean name than reference name. But, if you have multiple bean 
		of one type, it will not work and throw exception. Let's see the code where 
		are many bean of type B. <bean id="b1" class="org.sssit.B"></bean> <bean 
		id="b2" class="org.sssit.B"></bean> <bean id="a" class="org.sssit.A" autowire="byName"></bean> 
		In such case, it will throw exception. -->

</beans>